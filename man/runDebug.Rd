% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runDebug.R
\name{runDebug}
\alias{runDebug}
\title{runDebug}
\usage{
runDebug(where, title, vars, vals)
}
\arguments{
\item{where}{indicates where in the program runDebug was called}

\item{title}{string text to be displayed when this function is triggered}

\item{vars}{strings names of the variables to be placed in the global environment}

\item{vals}{numeric values to be given to the variables.}
}
\value{
puts in the globalenvironment the variables named "vars"
}
\description{
runDebug is an internal function used by GRD and superb
to help in debugging the functions. It assigns in the global environment
the variables that are local to a function so that they become visible.
Use \code{options("superb.feedback" = "all")} to turn all debug on.

The default values to the option "superb.feedback" is c("design","warnings","summary","experimental")
where the four entries allow:
\itemize{
\item design:       (in superbPlot) showing information on how the within-subject variables are understood;
\item warnings:     (in superbPlot) returning 'FYI' messages about the data to help decide if
the appropriate error bars were used
\item summary:      (in GRD) showing a recapitulation of the design;
\item experimental: (in superbPlot) showing a message if experimental features are used. This last
feedback information is currently not inhibited but will be in future versions.
}
}
