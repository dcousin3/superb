% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grd.R
\name{GRD}
\alias{GRD}
\title{GRD}
\usage{
GRD(
  RenameDV = "DV",
  SubjectsPerGroup = 100,
  BSFactors = "",
  WSFactors = "",
  Effects = list(),
  Population = list(mean = 0, stddev = 1, rho = 0, scores =
    "rnorm(1, mean = GM, sd = STDDEV)"),
  Contaminant = list(mean = 0, stddev = 1, rho = 0, scores =
    "rnorm(1, mean = CGM, sd = CSTDDEV)", proportion = 0),
  Debug = FALSE,
  Summary = FALSE
)
}
\arguments{
\item{asfd}{adsf}

\item{adsff}{adf asdf}

\item{asdf}{adfsasdf}

\item{adsf}{asdfasdf}
}
\value{

}
\description{
Generate Random Data (GRD) is a function that
generates a data frame of random data suitable for analyses.
}
\examples{
# basic example using a built-in dataframe as data; 
# by default, the mean is computed and the error bar are 95\% confidence intervals
plotESP(ToothGrowth, bsFactor = c("dose", "supp"), 
  variables = "len") 

# example changing the summary statistics to the median and
# the error bar to 90\% confidence intervals
plotESP(ToothGrowth, bsFactor = c("dose", "supp"), 
  variables = "len", statistic = "median", errorbar = "CI", gamma = .90) 

# example introducing adjustments for pairwise comparisons 
# and assuming that the whole population is limited to 200 persons
plotESP(ToothGrowth, bsFactor = c("dose", "supp"), 
  variables = "len",  
  adjustments = list( purpose = "difference", popSize = 200) )

# This example add ggplot directives to the plot produced
plotESP(ToothGrowth, bsFactor = c("dose", "supp"), 
  variables = "len") + 
  xlab("Dose") + ylab("Tooth Growth") +
  theme_bw()

# This example is based on repeated measures
library(lsr)
library(gridExtra)
# define shorter column names...
names(Orange) <- c("Tree","age","circ")
# turn the data into a wide format
Orange.wide <- longToWide(Orange, circ ~ age)
p1=plotESP( Orange.wide, wsFactor = "age(7)",
  variables = c("circ_118","circ_484","circ_664","circ_1004","circ_1231","circ_1372","circ_1582"),
  adjustments = list(purpose = "difference", decorrelation = "none")
) + 
  xlab("Age level") + ylab("Trunk diameter (mm)") +
  coord_cartesian( ylim = c(0,250) ) + labs(title="Basic confidence intervals")
p2=plotESP( Orange.wide, wsFactor = "age(7)",
  variables = c("circ_118","circ_484","circ_664","circ_1004","circ_1231","circ_1372","circ_1582"),
  adjustments = list(purpose = "difference", decorrelation = "CM")
) + 
  xlab("Age level") + ylab("Trunk diameter (mm)") +
  coord_cartesian( ylim = c(0,250) ) + labs(title="Decorrelated confidence intervals")
grid.arrange(p1,p2,ncol=2)


}
